{"version":3,"sources":["../../../src/utils/abi.test.ts"],"names":["encode","ETHER_BALANCES_ID","ETHER_BALANCES_TYPE","withId","describe","it","expect","toBe"],"mappings":"AAAA,OAASA,MAAT,KAAuB,cAAvB,CACA,OAASC,iBAAT,CAA4BC,mBAA5B,KAAuD,cAAvD,CACA,OAASC,MAAT,KAAuB,OAAvB,CAEAC,QAAQ,CAAC,QAAD,CAAW,IAAM,CACvBC,EAAE,CAAC,uCAAD,CAA0C,IAAM,CAChDC,MAAM,CACJH,MAAM,CAACF,iBAAD,CAAoBD,MAAM,CAACE,mBAAD,CAAsB,CAAC,CAAC,4CAAD,CAAD,CAAtB,CAA1B,CADF,CAAN,CAEEK,IAFF,CAGE,4MAHF,CAKD,CANC,CAOH,CARO,C","sourcesContent":["import { encode } from '@findeth/abi';\nimport { ETHER_BALANCES_ID, ETHER_BALANCES_TYPE } from '../constants';\nimport { withId } from './abi';\n\ndescribe('withId', () => {\n  it('returns an encoded hexadecimal string', () => {\n    expect(\n      withId(ETHER_BALANCES_ID, encode(ETHER_BALANCES_TYPE, [['0x4bbeEB066eD09B7AEd07bF39EEe0460DFa261520']]))\n    ).toBe(\n      '0xdbdbb51b000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000004bbeeb066ed09b7aed07bf39eee0460dfa261520'\n    );\n  });\n});\n"],"file":"abi.test.js"}